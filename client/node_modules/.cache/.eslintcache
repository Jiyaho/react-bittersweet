[{"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/index.js":"1","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/App.js":"2","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/Nav.js":"3","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/Footer.js":"4","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/hooks/useScrollFadeIn.js":"5","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/RegisterPage.js":"6","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/LoginPage.js":"7","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/_reducers/index.js":"8","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/_reducers/user_reducer.js":"9","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/_actions/types.js":"10","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/_actions/user_action.js":"11","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/hoc/auth.js":"12","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/whatsNew/FormOfNoticeWrite.js":"13","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/whatsNew/FormOfNoticeDetail.js":"14","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/menu/FormOfMenu.js":"15","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/faq/FormOfFaq.js":"16","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/whatsNew/FormOfNotice.js":"17","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/menu/FormOfMenuDetail.js":"18","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/whatsnew/FormOfNoticeDetail.js":"19","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/whatsnew/FormOfNoticeWrite.js":"20","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/whatsnew/FormOfNotice.js":"21","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/aboutUs/BrandPrinciple.js":"22","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/aboutus/BrandPrinciple.js":"23","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/aboutUs/History.js":"24","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/aboutUs/Coffee.js":"25","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/aboutUs/AboutUs.js":"26","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/menu/Menu.js":"27","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/home/Home.js":"28","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/whatsNew/Notice.js":"29","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/store/Store.js":"30","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/faq/Faq.js":"31","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/menu/MenuDetail.js":"32","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/whatsNew/NoticeDetail.js":"33","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/whatsNew/NoticeEdit.js":"34","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/whatsNew/NoticeWrite.js":"35","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/ScrollBtn.js":"36","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/menu/Menu_Beverage.js":"37","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/menu/Menu_Coffee.js":"38","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/menu/Menu_Tea.js":"39"},{"size":743,"mtime":1668433703011,"results":"40","hashOfConfig":"41"},{"size":2546,"mtime":1669703594676,"results":"42","hashOfConfig":"41"},{"size":2855,"mtime":1669293734217,"results":"43","hashOfConfig":"41"},{"size":480,"mtime":1668060868490,"results":"44","hashOfConfig":"41"},{"size":1419,"mtime":1666683784941,"results":"45","hashOfConfig":"41"},{"size":2300,"mtime":1668433699832,"results":"46","hashOfConfig":"41"},{"size":1731,"mtime":1668582797144,"results":"47","hashOfConfig":"41"},{"size":156,"mtime":1668409314557,"results":"48","hashOfConfig":"41"},{"size":568,"mtime":1669213314640,"results":"49","hashOfConfig":"41"},{"size":168,"mtime":1669215345376,"results":"50","hashOfConfig":"41"},{"size":1055,"mtime":1669213321434,"results":"51","hashOfConfig":"41"},{"size":1635,"mtime":1668601698806,"results":"52","hashOfConfig":"41"},{"size":1728,"mtime":1669380971663,"results":"53","hashOfConfig":"41"},{"size":1260,"mtime":1669206934679,"results":"54","hashOfConfig":"41"},{"size":532,"mtime":1668060875834,"results":"55","hashOfConfig":"41"},{"size":923,"mtime":1668060872501,"results":"56","hashOfConfig":"41"},{"size":701,"mtime":1669215239632,"results":"57","hashOfConfig":"41"},{"size":3174,"mtime":1669725916864,"results":"58","hashOfConfig":"41"},{"size":1260,"mtime":1669206934679,"results":"59","hashOfConfig":"41"},{"size":1728,"mtime":1669380971663,"results":"60","hashOfConfig":"41"},{"size":701,"mtime":1669215239632,"results":"61","hashOfConfig":"41"},{"size":1102,"mtime":1669381967098,"results":"62","hashOfConfig":"41"},{"size":1102,"mtime":1669381967098,"results":"63","hashOfConfig":"41"},{"size":393,"mtime":1669381933052,"results":"64","hashOfConfig":"41"},{"size":2872,"mtime":1669652476640,"results":"65","hashOfConfig":"41"},{"size":1402,"mtime":1669731219397,"results":"66","hashOfConfig":"41"},{"size":1989,"mtime":1669706740149,"results":"67","hashOfConfig":"41"},{"size":1654,"mtime":1669730668984,"results":"68","hashOfConfig":"41"},{"size":1790,"mtime":1669637403587,"results":"69","hashOfConfig":"41"},{"size":285,"mtime":1669383509016,"results":"70","hashOfConfig":"41"},{"size":2779,"mtime":1669637335771,"results":"71","hashOfConfig":"41"},{"size":1546,"mtime":1669708097955,"results":"72","hashOfConfig":"41"},{"size":1358,"mtime":1669382630291,"results":"73","hashOfConfig":"41"},{"size":3501,"mtime":1669378674401,"results":"74","hashOfConfig":"41"},{"size":2011,"mtime":1669382630291,"results":"75","hashOfConfig":"41"},{"size":761,"mtime":1669637564914,"results":"76","hashOfConfig":"41"},{"size":2208,"mtime":1669706820026,"results":"77","hashOfConfig":"41"},{"size":2207,"mtime":1669706659621,"results":"78","hashOfConfig":"41"},{"size":2204,"mtime":1669706739439,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m7mqlb",{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/index.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/App.js",["209","210","211"],[],"import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"routes/home/Home\";\nimport AboutUs from \"routes/aboutUs/AboutUs\";\nimport Menu from \"routes/menu/Menu\";\nimport MenuDetail from \"routes/menu/MenuDetail\";\nimport Menu_Beverage from \"routes/menu/Menu_Beverage\";\nimport Menu_Coffee from \"routes/menu/Menu_Coffee\";\nimport Menu_Tea from \"routes/menu/Menu_Tea\";\nimport Store from \"routes/store/Store\";\nimport Faq from \"routes/faq/Faq\";\nimport Notice from \"routes/whatsNew/Notice\";\nimport NoticeDetail from \"routes/whatsNew/NoticeDetail\";\nimport NoticeWrite from \"routes/whatsNew/NoticeWrite\";\nimport LoginPage from \"routes/LoginPage\";\nimport RegisterPage from \"routes/RegisterPage\";\nimport Auth from \"hoc/auth\";\nimport NoticeEdit from \"routes/whatsNew/NoticeEdit\";\n\nfunction App() {\n  // =====페이지 접근 권한 설정=====\n  // Auth(SpecificComponent, option, adminRoute = null);\n  // 위 function의 3가지 Parameter를 App.js에 부여해주어 페이지 접근 권한을 설정해준다.\n\n  // option의 3가지 선택지\n  // 1. null: 아무나 출입 가능한 페이지\n  // 2. true: 로그인한 유저만 출입 가능한 페이지\n  // 3. false: 로그인한 유저는 출입 불가능한 페이지\n\n  // adminRoute 선택지\n  // 1. null: 아무나 출입 가능한 페이지 (default는 null로 설정)\n  // 2. true: admin만 출입 가능한 페이지\n  const AuthHomePage = Auth(Home, null);\n  const AuthLoginPage = Auth(LoginPage, false);\n  const AuthRegisterPage = Auth(RegisterPage, false);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<AuthHomePage />} />\n        <Route path=\"/login\" element={<AuthLoginPage />} />\n        <Route path=\"/register\" element={<AuthRegisterPage />} />\n        <Route path=\"/about\" element={<AboutUs />} />\n        <Route path=\"/menu\" element={<Menu />} />\n        <Route path=\"/menu-detail/:idx\" element={<MenuDetail />} />\n        <Route path=\"/menu/coffee\" element={<Menu_Coffee />} />\n        <Route path=\"/menu/beverage\" element={<Menu_Beverage />} />\n        <Route path=\"/menu/tea\" element={<Menu_Tea />} />\n        <Route path=\"/store\" element={<Store />} />\n        <Route path=\"/faq\" element={<Faq />} />\n        <Route path=\"/notice\" element={<Notice />} />\n        <Route path=\"/notice-detail/:_id\" element={<NoticeDetail />} />\n        <Route path=\"/notice-write\" element={<NoticeWrite />} />\n        <Route path=\"/notice-edit/:_id\" element={<NoticeEdit />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/Nav.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/Footer.js",[],[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/hooks/useScrollFadeIn.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/RegisterPage.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/LoginPage.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/_reducers/index.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/_reducers/user_reducer.js",["212","213","214","215","216"],[],"import {\n  LOGIN_USER,\n  REGISTER_USER,\n  AUTH_USER,\n  USER_POSTING,\n  USER_EDITING,\n} from \"_actions/types\";\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case LOGIN_USER:\n      return { ...state, loginSuccess: action.payload };\n      break;\n    case REGISTER_USER:\n      return { ...state, register: action.payload };\n      break;\n    case AUTH_USER:\n      return { ...state, userData: action.payload };\n      break;\n    case USER_POSTING:\n      return { ...state, postSuccess: action.payload };\n    default:\n      return state;\n  }\n}\n","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/_actions/types.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/_actions/user_action.js",["217"],[],"import axios from \"axios\";\nimport {\n  LOGIN_USER,\n  REGISTER_USER,\n  AUTH_USER,\n  USER_POSTING,\n  USER_EDITING,\n} from \"./types\";\n\nexport function loginUser(dataToSubmit) {\n  //dataToSubmit은 LoginPage의 body(이메일, 패스워드)를 parameter로 받는 것임.\n  const request = axios\n    .post(\"/api/users/login\", dataToSubmit)\n    .then((response) => response.data);\n\n  return {\n    type: LOGIN_USER,\n    payload: request,\n  };\n}\n\nexport function registerUser(dataToSubmit) {\n  const request = axios\n    .post(\"/api/users/register\", dataToSubmit)\n    .then((response) => response.data);\n\n  return {\n    type: REGISTER_USER,\n    payload: request,\n  };\n}\n\nexport function auth() {\n  const request = axios\n    .get(\"/api/users/auth\")\n    .then((response) => response.data);\n\n  return {\n    type: AUTH_USER,\n    payload: request,\n  };\n}\n\nexport function userPosting(dataToSubmit) {\n  const request = axios\n    .post(\"/api/posting\", dataToSubmit)\n    .then((response) => response.data);\n\n  return {\n    type: USER_POSTING,\n    payload: request,\n  };\n}\n","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/hoc/auth.js",["218","219"],[],"import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { auth } from \"_actions/user_action\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n  // 위 function의 3가지 Parameter를 App.js에 부여해주어 페이지 접근 권한을 설정해준다.\n\n  // option의 3가지 선택지\n  // 1. null: 아무나 출입 가능한 페이지\n  // 2. true: 로그인한 유저만 출입 가능한 페이지\n  // 3. false: 로그인한 유저는 출입 불가능한 페이지\n\n  // adminRoute 선택지\n  // 1. null: 아무나 출입 가능한 페이지 (default는 null로 설정)\n  // 2. true: admin만 출입 가능한 페이지\n\n  function AuthenticationCheck() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n      dispatch(auth()).then((response) => {\n        console.log(response);\n        //로그인하지 않은 상태\n        if (!response.payload.isAuth) {\n          if (option) {\n            navigate(\"/login\");\n          }\n        } else {\n          //로그인을 한 상태\n          //1. admin 권한이 없는 유저가 adminRoute를 접속하려 할 때.\n          //2. 로그인한 유저가 출입 불가능한 페이지(LoginPage, RegisterPage)로 접근하려 할 때.\n          if (adminRoute && !response.payload.isAdmin) {\n            navigate(\"/\");\n          } else {\n            if (option === false) {\n              navigate(\"/\");\n            }\n          }\n        }\n      });\n    }, []);\n    return <SpecificComponent />;\n  }\n  return AuthenticationCheck;\n}\n","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/whatsNew/FormOfNoticeWrite.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/whatsNew/FormOfNoticeDetail.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/menu/FormOfMenu.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/faq/FormOfFaq.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/whatsNew/FormOfNotice.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/menu/FormOfMenuDetail.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/whatsnew/FormOfNoticeDetail.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/whatsnew/FormOfNoticeWrite.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/whatsnew/FormOfNotice.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/aboutUs/BrandPrinciple.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/aboutus/BrandPrinciple.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/aboutUs/History.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/aboutUs/Coffee.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/aboutUs/AboutUs.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/menu/Menu.js",["220"],[],"import Nav from \"components/Nav\";\nimport Footer from \"components/Footer\";\nimport styles from \"css/App.module.css\";\nimport FormOfMenu from \"components/menu/FormOfMenu\";\nimport menuData from \"data/menuData.json\";\nimport { useEffect, useState } from \"react\";\nimport ScrollBtn from \"components/ScrollBtn\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Menu() {\n  const [filteredCategory, setFilteredCategory] = useState(null);\n  const menuDatas = menuData.data;\n  const navigate = useNavigate();\n  const buttons = [\n    {\n      name: \"ALL\",\n      value: \"all\",\n    },\n    {\n      name: \"COFFEE\",\n      value: \"coffee\",\n    },\n    {\n      name: \"BEVERAGE\",\n      value: \"beverage\",\n    },\n    {\n      name: \"TEA\",\n      value: \"tea\",\n    },\n  ];\n\n  function handleCate(e) {\n    let clickedBtn = e.target.value;\n    if (clickedBtn.includes(\"all\")) {\n      navigate(\"/menu\");\n    } else {\n      navigate(`/menu/${clickedBtn}`);\n    }\n  }\n\n  useEffect(() => {\n    setFilteredCategory(menuDatas);\n  }, []);\n\n  return (\n    <div>\n      <Nav />\n      <ScrollBtn />\n      <h2 className={styles.page_title}>MENU</h2>\n      <div className={styles.menuCateBtnWrap}>\n        {buttons.map((btn, idx) => {\n          return (\n            <button\n              className={styles.cateBtn}\n              key={idx}\n              value={btn.value}\n              onClick={handleCate}\n            >\n              {btn.name}\n            </button>\n          );\n        })}\n      </div>\n      <div className={styles.menu}>\n        <ul>\n          {filteredCategory &&\n            filteredCategory.map((menu) => {\n              return (\n                <FormOfMenu\n                  key={menu.idx}\n                  idx={menu.idx}\n                  menuName={menu.name_ko}\n                  imgsrc={require(`../../images/${menu.url}`)}\n                  imgalt={menu.url}\n                />\n              );\n            })}\n        </ul>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Menu;\n","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/home/Home.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/whatsNew/Notice.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/store/Store.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/faq/Faq.js",["221"],[],"import { useEffect, useState } from \"react\";\nimport styles from \"css/App.module.css\";\nimport Nav from \"components/Nav\";\nimport Footer from \"components/Footer\";\nimport FormOfFaq from \"components/faq/FormOfFaq\";\nimport ScrollBtn from \"components/ScrollBtn\";\n\nfunction Faq() {\n  const [faqs, setFaqs] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n\n  const faq = [\n    {\n      idx: \"1\",\n      q: \"첫번째로 자주하는 질문이 뭔가요?\",\n      a: \"첫번째 질문에 대한 대답입니다.\",\n    },\n    {\n      idx: \"2\",\n      q: \"두번째로 자주하는 질문이 뭔가요?\",\n      a: \"두번째 질문에 대한 대답입니다\",\n    },\n    {\n      idx: \"3\",\n      q: \"세번째로 자주하는 질문이 뭔가요?\",\n      a: \"세번째 질문에 대한 대답입니다\",\n    },\n    {\n      idx: \"4\",\n      q: \"네번째로 자주하는 질문이 뭔가요?\",\n      a: \"네번째 질문에 대한 대답입니다\",\n    },\n    {\n      idx: \"5\",\n      q: \"다섯번째로 자주하는 질문이 뭔가요?\",\n      a: \"다섯번째 질문에 대한 대답입니다\",\n    },\n    {\n      idx: \"6\",\n      q: \"여섯번째로 자주하는 질문이 뭔가요?\",\n      a: \"여섯번째 질문에 대한 대답입니다\",\n    },\n    {\n      idx: \"7\",\n      q: \"일곱번째로 자주하는 질문이 뭔가요?\",\n      a: \"일곱번째 질문에 대한 대답입니다\",\n    },\n    {\n      idx: \"8\",\n      q: \"여덟번째로 자주하는 질문이 뭔가요?\",\n      a: \"여덟번째 질문에 대한 대답입니다\",\n    },\n    {\n      idx: \"9\",\n      q: \"아홉번째로 자주하는 질문이 뭔가요?\",\n      a: \"아홉번째 질문에 대한 대답입니다\",\n    },\n    {\n      idx: \"10\",\n      q: \"열번째로 자주하는 질문이 뭔가요?\",\n      a: \"열번째 질문에 대한 대답입니다\",\n    },\n  ];\n\n  const getFaqs = () => {\n    setFaqs(faq);\n  };\n\n  const inputChange = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  useEffect(() => {\n    getFaqs();\n  }, []);\n\n  const filtered = faqs.filter((faqList) => {\n    return faqList.q.includes(userInput);\n  });\n\n  return (\n    <div className={styles.wrap}>\n      <Nav />\n      <ScrollBtn />\n      <h2 className={styles.page_title}>자주하는 질문</h2>\n      <input\n        className={styles.faq_input}\n        value={userInput}\n        placeholder=\"검색할 내용을 입력해 주세요.\"\n        onChange={inputChange}\n      ></input>\n      <div className={styles.question_container}>\n        {filtered.map((faqList) => {\n          return (\n            <FormOfFaq\n              key={faqList.idx}\n              question={faqList.q}\n              answer={faqList.a}\n            />\n          );\n        })}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Faq;\n","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/menu/MenuDetail.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/whatsNew/NoticeDetail.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/whatsNew/NoticeEdit.js",["222"],[],"import styles from \"css/App.module.css\";\nimport Nav from \"components/Nav\";\nimport Footer from \"components/Footer\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction NoticeEdit() {\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const { _id } = useParams();\n  const [writer, setWriter] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const getPosts = () => {\n    axios.get(\"/api/posting\").then((response) => {\n      let post = response.data;\n      setPosts(post);\n    });\n  };\n\n  const filteredPost = posts.filter((item) => {\n    return item._id === _id;\n  });\n\n  const onWriterHandler = (e) => {\n    setWriter(e.target.value);\n  };\n  const onTitleHandler = (e) => {\n    setTitle(e.target.value);\n  };\n  const onContentHandler = (e) => {\n    setContent(e.target.value);\n  };\n\n  const onEditSubmit = (e) => {\n    e.preventDefault();\n    let body = {\n      writer: writer,\n      title: title,\n      content: content,\n    };\n    const request = axios\n      .patch(`/api/posting/${_id}`, body)\n      .then((response) => response.data);\n    alert(\"수정 완료!\");\n    navigate(\"/notice\");\n\n    return {\n      type: \"user_editing\",\n      payload: request,\n    };\n  };\n\n  const onClickCancle = () => {\n    if (window.confirm(\"등록을 취소 하시겠습니까?\") == true) {\n      navigate(\"/notice\");\n    } else {\n      return;\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <div>\n      <Nav />\n      <h2 className={styles.page_title}>EDIT POST</h2>\n      {filteredPost.map((item) => {\n        return (\n          <div key={item._id} className={styles.wrapNoticeWrite}>\n            <div>\n              <form onSubmit={onEditSubmit}>\n                <br />\n                <input\n                  placeholder={item.writer}\n                  type=\"text\"\n                  required=\"required\"\n                  max=\"10\"\n                  className={styles.titleInput}\n                  onChange={onWriterHandler}\n                  value={writer}\n                />\n                <input\n                  placeholder={item.title}\n                  type=\"text\"\n                  required=\"required\"\n                  max=\"10\"\n                  className={styles.titleInput}\n                  onChange={onTitleHandler}\n                  value={title}\n                />\n                <div className={styles.contentWrap}>\n                  <textarea\n                    cols=\"50\"\n                    rows=\"10\"\n                    placeholder={item.content}\n                    onChange={onContentHandler}\n                    value={content}\n                  />\n                </div>\n                <div className={styles.noticeWriteBtnWrap}>\n                  <button\n                    className={styles.postCancleBtn}\n                    onClick={onClickCancle}\n                  >\n                    취소\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className={styles.postBtn}\n                    onSubmit={onEditSubmit}\n                    value={_id}\n                  >\n                    등록\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default NoticeEdit;\n","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/whatsNew/NoticeWrite.js",["223"],[],"import FormOfNoticeWrite from \"components/whatsnew/FormOfNoticeWrite\";\nimport Nav from \"components/Nav\";\nimport Footer from \"components/Footer\";\nimport styles from \"css/App.module.css\";\nimport { useState } from \"react\";\nimport { userPosting } from \"_actions/user_action\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nfunction NoticeWrite() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [writer, setWriter] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const onWriterHandler = (e) => {\n    setWriter(e.target.value);\n  };\n  const onTilteHandler = (e) => {\n    setTitle(e.target.value);\n  };\n  const onContentHandler = (e) => {\n    setContent(e.target.value);\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let body = {\n      writer: writer,\n      title: title,\n      content: content,\n    };\n    dispatch(userPosting(body)).then((response) => {\n      if (response.payload.postSuccess) {\n        alert(\"등록 완료!\");\n        navigate(\"/notice\");\n      } else {\n        alert(\"Error\");\n      }\n    });\n  };\n\n  const onClickCancle = () => {\n    if (window.confirm(\"등록을 취소 하시겠습니까?\") == true) {\n      navigate(\"/notice\");\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <div>\n      <Nav />\n      <h2 className={styles.page_title}>WRITE</h2>\n      <FormOfNoticeWrite\n        formOnSubmit={onSubmit}\n        writerPlaceholder=\"이름을 입력해 주세요\"\n        writerOnchange={onWriterHandler}\n        writerValue={writer}\n        titlePlaceholder=\"제목을 입력해 주세요.\"\n        titleOnchange={onTilteHandler}\n        titleValue={title}\n        contentPlaceholder=\"내용을 입력해 주세요.\"\n        contentOnchange={onContentHandler}\n        contentValue={content}\n        buttonOnSubmit={onSubmit}\n        cancleBtnOnClick={onClickCancle}\n      />\n      <Footer />\n    </div>\n  );\n}\nexport default NoticeWrite;\n","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/ScrollBtn.js",[],[],"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/menu/Menu_Beverage.js",["224"],[],"import Nav from \"components/Nav\";\nimport Footer from \"components/Footer\";\nimport styles from \"css/App.module.css\";\nimport FormOfMenu from \"components/menu/FormOfMenu\";\nimport menuData from \"data/menuData.json\";\nimport { useEffect, useState } from \"react\";\nimport ScrollBtn from \"components/ScrollBtn\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Menu_Coffee() {\n  const menuDatas = menuData.data;\n  const [filteredCategory, setFilteredCategory] = useState([]);\n  const navigate = useNavigate();\n  const buttons = [\n    {\n      name: \"ALL\",\n      value: \"all\",\n    },\n    {\n      name: \"COFFEE\",\n      value: \"coffee\",\n    },\n    {\n      name: \"BEVERAGE\",\n      value: \"beverage\",\n    },\n    {\n      name: \"TEA\",\n      value: \"tea\",\n    },\n  ];\n\n  function handleCate(e) {\n    let clickedBtn = e.target.value;\n    if (clickedBtn.includes(\"all\")) {\n      navigate(\"/menu\");\n    } else {\n      navigate(`/menu/${clickedBtn}`);\n    }\n  }\n\n  const filterMenu = (cate) => {\n    let filteredMenu = menuDatas.filter((menu) => menu.category.includes(cate));\n    return filteredMenu;\n  };\n\n  const getMenus = () => {\n    setFilteredCategory(filterMenu(\"BEVERAGE\"));\n  };\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  return (\n    <div>\n      <Nav />\n      <ScrollBtn />\n      <h2 className={styles.page_title}>MENU</h2>\n      <div className={styles.menuCateBtnWrap}>\n        {buttons.map((btn, idx) => {\n          return (\n            <button\n              className={styles.cateBtn}\n              key={idx}\n              value={btn.value}\n              onClick={handleCate}\n            >\n              {btn.name}\n            </button>\n          );\n        })}\n      </div>\n      <div className={styles.menu}>\n        <ul>\n          {filteredCategory &&\n            filteredCategory.map((menu) => {\n              return (\n                <FormOfMenu\n                  key={menu.idx}\n                  idx={menu.idx}\n                  menuName={menu.name_ko}\n                  imgsrc={require(`../../images/${menu.url}`)}\n                  imgalt={menu.url}\n                />\n              );\n            })}\n        </ul>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Menu_Coffee;\n","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/menu/Menu_Coffee.js",["225"],[],"import Nav from \"components/Nav\";\nimport Footer from \"components/Footer\";\nimport styles from \"css/App.module.css\";\nimport FormOfMenu from \"components/menu/FormOfMenu\";\nimport menuData from \"data/menuData.json\";\nimport { useEffect, useState } from \"react\";\nimport ScrollBtn from \"components/ScrollBtn\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Menu_Coffee() {\n  const menuDatas = menuData.data;\n  const [filteredCategory, setFilteredCategory] = useState([]);\n  const navigate = useNavigate();\n  const buttons = [\n    {\n      name: \"ALL\",\n      value: \"all\",\n    },\n    {\n      name: \"COFFEE\",\n      value: \"coffee\",\n    },\n    {\n      name: \"BEVERAGE\",\n      value: \"beverage\",\n    },\n    {\n      name: \"TEA\",\n      value: \"tea\",\n    },\n  ];\n\n  function handleCate(e) {\n    let clickedBtn = e.target.value;\n    if (clickedBtn.includes(\"all\")) {\n      navigate(\"/menu\");\n    } else {\n      navigate(`/menu/${clickedBtn}`);\n    }\n  }\n\n  const filterMenu = (cate) => {\n    let filteredMenu = menuDatas.filter((menu) => menu.category.includes(cate));\n    return filteredMenu;\n  };\n\n  const getMenus = () => {\n    setFilteredCategory(filterMenu(\"COFFEE\"));\n  };\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  return (\n    <div>\n      <Nav />\n      <ScrollBtn />\n      <h2 className={styles.page_title}>MENU</h2>\n      <div className={styles.menuCateBtnWrap}>\n        {buttons.map((btn, idx) => {\n          return (\n            <button\n              className={styles.cateBtn}\n              key={idx}\n              value={btn.value}\n              onClick={handleCate}\n            >\n              {btn.name}\n            </button>\n          );\n        })}\n      </div>\n      <div className={styles.menu}>\n        <ul>\n          {filteredCategory &&\n            filteredCategory.map((menu) => {\n              return (\n                <FormOfMenu\n                  key={menu.idx}\n                  idx={menu.idx}\n                  menuName={menu.name_ko}\n                  imgsrc={require(`../../images/${menu.url}`)}\n                  imgalt={menu.url}\n                />\n              );\n            })}\n        </ul>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default Menu_Coffee;\n","/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/menu/Menu_Tea.js",["226"],[],"import Nav from \"components/Nav\";\nimport Footer from \"components/Footer\";\nimport styles from \"css/App.module.css\";\nimport FormOfMenu from \"components/menu/FormOfMenu\";\nimport menuData from \"data/menuData.json\";\nimport { useEffect, useState } from \"react\";\nimport ScrollBtn from \"components/ScrollBtn\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Menu_Coffee() {\n  const menuDatas = menuData.data;\n  const [filteredCategory, setFilteredCategory] = useState([]);\n  const navigate = useNavigate();\n  const buttons = [\n    {\n      name: \"ALL\",\n      value: \"all\",\n    },\n    {\n      name: \"COFFEE\",\n      value: \"coffee\",\n    },\n    {\n      name: \"BEVERAGE\",\n      value: \"beverage\",\n    },\n    {\n      name: \"TEA\",\n      value: \"tea\",\n    },\n  ];\n\n  function handleCate(e) {\n    let clickedBtn = e.target.value;\n    if (clickedBtn.includes(\"all\")) {\n      navigate(\"/menu\");\n    } else {\n      navigate(`/menu/${clickedBtn}`);\n    }\n  }\n\n  const filterMenu = (cate) => {\n    let filteredMenu = menuDatas.filter((menu) => menu.category.includes(cate));\n    return filteredMenu;\n  };\n\n  const getMenus = () => {\n    setFilteredCategory(filterMenu(\"TEA\"));\n  };\n\n  useEffect(() => {\n    getMenus();\n  }, []);\n\n  return (\n    <div>\n      <Nav />\n      <ScrollBtn />\n      <h2 className={styles.page_title}>MENU</h2>\n      <div className={styles.menuCateBtnWrap}>\n        {buttons.map((btn, idx) => {\n          return (\n            <button\n              className={styles.cateBtn}\n              key={idx}\n              value={btn.value}\n              onClick={handleCate}\n            >\n              {btn.name}\n            </button>\n          );\n        })}\n      </div>\n      <div className={styles.menu}>\n        <ul>\n          {filteredCategory &&\n            filteredCategory.map((menu) => {\n              return (\n                <FormOfMenu\n                  key={menu.idx}\n                  idx={menu.idx}\n                  menuName={menu.name_ko}\n                  imgsrc={require(`../../images/${menu.url}`)}\n                  imgalt={menu.url}\n                />\n              );\n            })}\n        </ul>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default Menu_Coffee;\n",{"ruleId":"227","severity":1,"message":"228","line":45,"column":45,"nodeType":"229","messageId":"230","endLine":45,"endColumn":60},{"ruleId":"227","severity":1,"message":"231","line":46,"column":47,"nodeType":"229","messageId":"230","endLine":46,"endColumn":64},{"ruleId":"227","severity":1,"message":"232","line":47,"column":42,"nodeType":"229","messageId":"230","endLine":47,"endColumn":54},{"ruleId":"233","severity":1,"message":"234","line":6,"column":3,"nodeType":"235","messageId":"236","endLine":6,"endColumn":15},{"ruleId":"237","severity":1,"message":"238","line":9,"column":1,"nodeType":"239","endLine":25,"endColumn":2},{"ruleId":"240","severity":1,"message":"241","line":13,"column":7,"nodeType":"242","messageId":"243","endLine":13,"endColumn":13},{"ruleId":"240","severity":1,"message":"241","line":16,"column":7,"nodeType":"242","messageId":"243","endLine":16,"endColumn":13},{"ruleId":"240","severity":1,"message":"241","line":19,"column":7,"nodeType":"242","messageId":"243","endLine":19,"endColumn":13},{"ruleId":"233","severity":1,"message":"234","line":7,"column":3,"nodeType":"235","messageId":"236","endLine":7,"endColumn":15},{"ruleId":"237","severity":1,"message":"238","line":6,"column":1,"nodeType":"239","endLine":47,"endColumn":2},{"ruleId":"244","severity":1,"message":"245","line":43,"column":8,"nodeType":"246","endLine":43,"endColumn":10,"suggestions":"247"},{"ruleId":"244","severity":1,"message":"248","line":44,"column":6,"nodeType":"246","endLine":44,"endColumn":8,"suggestions":"249"},{"ruleId":"244","severity":1,"message":"250","line":75,"column":6,"nodeType":"246","endLine":75,"endColumn":8,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":58,"column":42,"nodeType":"254","messageId":"255","endLine":58,"endColumn":44},{"ruleId":"252","severity":1,"message":"253","line":44,"column":42,"nodeType":"254","messageId":"255","endLine":44,"endColumn":44},{"ruleId":"244","severity":1,"message":"256","line":53,"column":6,"nodeType":"246","endLine":53,"endColumn":8,"suggestions":"257"},{"ruleId":"244","severity":1,"message":"256","line":53,"column":6,"nodeType":"246","endLine":53,"endColumn":8,"suggestions":"258"},{"ruleId":"244","severity":1,"message":"256","line":53,"column":6,"nodeType":"246","endLine":53,"endColumn":8,"suggestions":"259"},"react/jsx-pascal-case","Imported JSX component Menu_Coffee must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Menu_Beverage must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Menu_Tea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'USER_EDITING' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["260"],"React Hook useEffect has a missing dependency: 'menuDatas'. Either include it or remove the dependency array.",["261"],"React Hook useEffect has a missing dependency: 'getFaqs'. Either include it or remove the dependency array.",["262"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getMenus'. Either include it or remove the dependency array.",["263"],["264"],["265"],{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"272","fix":"274"},{"desc":"272","fix":"275"},"Update the dependencies array to be: [dispatch, navigate]",{"range":"276","text":"277"},"Update the dependencies array to be: [menuDatas]",{"range":"278","text":"279"},"Update the dependencies array to be: [getFaqs]",{"range":"280","text":"281"},"Update the dependencies array to be: [getMenus]",{"range":"282","text":"283"},{"range":"284","text":"283"},{"range":"285","text":"283"},[1254,1256],"[dispatch, navigate]",[1005,1007],"[menuDatas]",[1450,1452],"[getFaqs]",[1217,1219],"[getMenus]",[1215,1217],[1212,1214]]