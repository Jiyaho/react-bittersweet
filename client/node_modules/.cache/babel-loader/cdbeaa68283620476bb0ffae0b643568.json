{"ast":null,"code":"import{BrowserRouter as Router,Routes,Route}from\"react-router-dom\";import Home from\"routes/home/Home\";import AboutUs from\"routes/aboutUs/AboutUs\";import Menu from\"routes/menu/Menu\";import MenuDetail from\"routes/menu/MenuDetail\";import Menu_Beverage from\"routes/menu/Menu_Beverage\";import Menu_Coffee from\"routes/menu/Menu_Coffee\";import Menu_Tea from\"routes/menu/Menu_Tea\";import Store from\"routes/store/Store\";import Faq from\"routes/faq/Faq\";import Notice from\"routes/whatsNew/Notice\";import NoticeDetail from\"routes/whatsNew/NoticeDetail\";import NoticeWrite from\"routes/whatsNew/NoticeWrite\";import LoginPage from\"routes/LoginPage\";import RegisterPage from\"routes/RegisterPage\";import Auth from\"hoc/auth\";import NoticeEdit from\"routes/whatsNew/NoticeEdit\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// =====페이지 접근 권한 설정=====\n// Auth(SpecificComponent, option, adminRoute = null);\n// 위 function의 3가지 Parameter를 App.js에 부여해주어 페이지 접근 권한을 설정해준다.\n// option의 3가지 선택지\n// 1. null: 아무나 출입 가능한 페이지\n// 2. true: 로그인한 유저만 출입 가능한 페이지\n// 3. false: 로그인한 유저는 출입 불가능한 페이지\n// adminRoute 선택지\n// 1. null: 아무나 출입 가능한 페이지 (default는 null로 설정)\n// 2. true: admin만 출입 가능한 페이지\nvar AuthHomePage=Auth(Home,null);var AuthLoginPage=Auth(LoginPage,false);var AuthRegisterPage=Auth(RegisterPage,false);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(AuthHomePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(AuthLoginPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(AuthRegisterPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(AboutUs,{})}),/*#__PURE__*/_jsx(Route,{path:\"/menu\",element:/*#__PURE__*/_jsx(Menu,{})}),/*#__PURE__*/_jsx(Route,{path:\"/menu-detail/:idx\",element:/*#__PURE__*/_jsx(MenuDetail,{})}),/*#__PURE__*/_jsx(Route,{path:\"/menu/coffee\",element:/*#__PURE__*/_jsx(Menu_Coffee,{})}),/*#__PURE__*/_jsx(Route,{path:\"/menu/beverage\",element:/*#__PURE__*/_jsx(Menu_Beverage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/menu/tea\",element:/*#__PURE__*/_jsx(Menu_Tea,{})}),/*#__PURE__*/_jsx(Route,{path:\"/store\",element:/*#__PURE__*/_jsx(Store,{})}),/*#__PURE__*/_jsx(Route,{path:\"/faq\",element:/*#__PURE__*/_jsx(Faq,{})}),/*#__PURE__*/_jsx(Route,{path:\"/notice\",element:/*#__PURE__*/_jsx(Notice,{})}),/*#__PURE__*/_jsx(Route,{path:\"/notice-detail/:_id\",element:/*#__PURE__*/_jsx(NoticeDetail,{})}),/*#__PURE__*/_jsx(Route,{path:\"/notice-write\",element:/*#__PURE__*/_jsx(NoticeWrite,{})}),/*#__PURE__*/_jsx(Route,{path:\"/notice-edit/:_id\",element:/*#__PURE__*/_jsx(NoticeEdit,{})})]})});}export default App;","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Home","AboutUs","Menu","MenuDetail","Menu_Beverage","Menu_Coffee","Menu_Tea","Store","Faq","Notice","NoticeDetail","NoticeWrite","LoginPage","RegisterPage","Auth","NoticeEdit","App","AuthHomePage","AuthLoginPage","AuthRegisterPage"],"sources":["/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"routes/home/Home\";\nimport AboutUs from \"routes/aboutUs/AboutUs\";\nimport Menu from \"routes/menu/Menu\";\nimport MenuDetail from \"routes/menu/MenuDetail\";\nimport Menu_Beverage from \"routes/menu/Menu_Beverage\";\nimport Menu_Coffee from \"routes/menu/Menu_Coffee\";\nimport Menu_Tea from \"routes/menu/Menu_Tea\";\nimport Store from \"routes/store/Store\";\nimport Faq from \"routes/faq/Faq\";\nimport Notice from \"routes/whatsNew/Notice\";\nimport NoticeDetail from \"routes/whatsNew/NoticeDetail\";\nimport NoticeWrite from \"routes/whatsNew/NoticeWrite\";\nimport LoginPage from \"routes/LoginPage\";\nimport RegisterPage from \"routes/RegisterPage\";\nimport Auth from \"hoc/auth\";\nimport NoticeEdit from \"routes/whatsNew/NoticeEdit\";\n\nfunction App() {\n  // =====페이지 접근 권한 설정=====\n  // Auth(SpecificComponent, option, adminRoute = null);\n  // 위 function의 3가지 Parameter를 App.js에 부여해주어 페이지 접근 권한을 설정해준다.\n\n  // option의 3가지 선택지\n  // 1. null: 아무나 출입 가능한 페이지\n  // 2. true: 로그인한 유저만 출입 가능한 페이지\n  // 3. false: 로그인한 유저는 출입 불가능한 페이지\n\n  // adminRoute 선택지\n  // 1. null: 아무나 출입 가능한 페이지 (default는 null로 설정)\n  // 2. true: admin만 출입 가능한 페이지\n  const AuthHomePage = Auth(Home, null);\n  const AuthLoginPage = Auth(LoginPage, false);\n  const AuthRegisterPage = Auth(RegisterPage, false);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<AuthHomePage />} />\n        <Route path=\"/login\" element={<AuthLoginPage />} />\n        <Route path=\"/register\" element={<AuthRegisterPage />} />\n        <Route path=\"/about\" element={<AboutUs />} />\n        <Route path=\"/menu\" element={<Menu />} />\n        <Route path=\"/menu-detail/:idx\" element={<MenuDetail />} />\n        <Route path=\"/menu/coffee\" element={<Menu_Coffee />} />\n        <Route path=\"/menu/beverage\" element={<Menu_Beverage />} />\n        <Route path=\"/menu/tea\" element={<Menu_Tea />} />\n        <Route path=\"/store\" element={<Store />} />\n        <Route path=\"/faq\" element={<Faq />} />\n        <Route path=\"/notice\" element={<Notice />} />\n        <Route path=\"/notice-detail/:_id\" element={<NoticeDetail />} />\n        <Route path=\"/notice-write\" element={<NoticeWrite />} />\n        <Route path=\"/notice-edit/:_id\" element={<NoticeEdit />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,OAASA,aAAa,GAAIC,OAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,MAAOC,KAAI,KAAM,kBAAkB,CACnC,MAAOC,QAAO,KAAM,wBAAwB,CAC5C,MAAOC,KAAI,KAAM,kBAAkB,CACnC,MAAOC,WAAU,KAAM,wBAAwB,CAC/C,MAAOC,cAAa,KAAM,2BAA2B,CACrD,MAAOC,YAAW,KAAM,yBAAyB,CACjD,MAAOC,SAAQ,KAAM,sBAAsB,CAC3C,MAAOC,MAAK,KAAM,oBAAoB,CACtC,MAAOC,IAAG,KAAM,gBAAgB,CAChC,MAAOC,OAAM,KAAM,wBAAwB,CAC3C,MAAOC,aAAY,KAAM,8BAA8B,CACvD,MAAOC,YAAW,KAAM,6BAA6B,CACrD,MAAOC,UAAS,KAAM,kBAAkB,CACxC,MAAOC,aAAY,KAAM,qBAAqB,CAC9C,MAAOC,KAAI,KAAM,UAAU,CAC3B,MAAOC,WAAU,KAAM,4BAA4B,CAAC,wFAEpD,QAASC,IAAG,EAAG,CACb;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,GAAMC,aAAY,CAAGH,IAAI,CAACd,IAAI,CAAE,IAAI,CAAC,CACrC,GAAMkB,cAAa,CAAGJ,IAAI,CAACF,SAAS,CAAE,KAAK,CAAC,CAC5C,GAAMO,iBAAgB,CAAGL,IAAI,CAACD,YAAY,CAAE,KAAK,CAAC,CAElD,mBACE,KAAC,MAAM,wBACL,MAAC,MAAM,yBACL,KAAC,KAAK,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO,cAAE,KAAC,YAAY,IAAI,EAAG,cAC7C,KAAC,KAAK,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,cAAE,KAAC,aAAa,IAAI,EAAG,cACnD,KAAC,KAAK,EAAC,IAAI,CAAC,WAAW,CAAC,OAAO,cAAE,KAAC,gBAAgB,IAAI,EAAG,cACzD,KAAC,KAAK,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,cAAE,KAAC,OAAO,IAAI,EAAG,cAC7C,KAAC,KAAK,EAAC,IAAI,CAAC,OAAO,CAAC,OAAO,cAAE,KAAC,IAAI,IAAI,EAAG,cACzC,KAAC,KAAK,EAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,cAAE,KAAC,UAAU,IAAI,EAAG,cAC3D,KAAC,KAAK,EAAC,IAAI,CAAC,cAAc,CAAC,OAAO,cAAE,KAAC,WAAW,IAAI,EAAG,cACvD,KAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,cAAE,KAAC,aAAa,IAAI,EAAG,cAC3D,KAAC,KAAK,EAAC,IAAI,CAAC,WAAW,CAAC,OAAO,cAAE,KAAC,QAAQ,IAAI,EAAG,cACjD,KAAC,KAAK,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,cAAE,KAAC,KAAK,IAAI,EAAG,cAC3C,KAAC,KAAK,EAAC,IAAI,CAAC,MAAM,CAAC,OAAO,cAAE,KAAC,GAAG,IAAI,EAAG,cACvC,KAAC,KAAK,EAAC,IAAI,CAAC,SAAS,CAAC,OAAO,cAAE,KAAC,MAAM,IAAI,EAAG,cAC7C,KAAC,KAAK,EAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO,cAAE,KAAC,YAAY,IAAI,EAAG,cAC/D,KAAC,KAAK,EAAC,IAAI,CAAC,eAAe,CAAC,OAAO,cAAE,KAAC,WAAW,IAAI,EAAG,cACxD,KAAC,KAAK,EAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,cAAE,KAAC,UAAU,IAAI,EAAG,GACpD,EACF,CAEb,CAEA,cAAeG,IAAG"},"metadata":{},"sourceType":"module"}