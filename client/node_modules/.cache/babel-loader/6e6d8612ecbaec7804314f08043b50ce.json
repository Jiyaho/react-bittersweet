{"ast":null,"code":"var _jsxFileName = \"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/store/KakaoMap.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nfunction KakaoMap() {\n  _s();\n  useEffect(() => {\n    //마커를 담을 배열\n    const markers = [];\n\n    //지도를 담을 영역의 DOM 레퍼런스\n    const mapContainer = document.getElementById(\"map\");\n\n    //지도를 생성할 때 필요한 기본 옵션\n    const mapOption = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      //지도의 중심 좌표\n      level: 3 //지도의 레벨(확대, 축소 정도)\n    };\n\n    //지도 생성 및 객체 리턴\n    const map = new kakao.maps.Map(mapContainer, mapOption);\n\n    // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성\n    const mapTypeControl = new kakao.maps.MapTypeControl();\n\n    // 지도에 컨트롤을 추가해야 지도위에 표시됨.\n    // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미함.\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\n\n    // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성\n    const zoomControl = new kakao.maps.ZoomControl();\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n\n    // 장소 검색 객체를 생성합니다\n    const ps = new kakao.maps.services.Places();\n\n    // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n    const infowindow = new kakao.maps.InfoWindow({\n      zIndex: 1\n    });\n\n    // 키워드로 장소를 검색합니다\n    searchPlaces();\n\n    // 키워드 검색을 요청하는 함수입니다\n    function searchPlaces() {\n      var keyword = document.getElementById(\"keyword\").value;\n      if (!keyword.replace(/^\\s+|\\s+$/g, \"\")) {\n        alert(\"키워드를 입력해주세요!\");\n        return false;\n      }\n\n      // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\n      ps.keywordSearch(keyword, placesSearchCB);\n    }\n\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        // 정상적으로 검색이 완료됐으면\n        // 검색 목록과 마커를 표출합니다\n        displayPlaces(data);\n\n        // 페이지 번호를 표출합니다\n        displayPagination(pagination);\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n        alert(\"검색 결과가 존재하지 않습니다.\");\n        return;\n      } else if (status === kakao.maps.services.Status.ERROR) {\n        alert(\"검색 결과 중 오류가 발생했습니다.\");\n        return;\n      }\n    }\n\n    // 검색 결과 목록과 마커를 표출하는 함수입니다\n    function displayPlaces(places) {\n      var listEl = document.getElementById(\"placesList\"),\n        menuEl = document.getElementById(\"menu_wrap\"),\n        fragment = document.createDocumentFragment(),\n        bounds = new kakao.maps.LatLngBounds(),\n        listStr = \"\";\n\n      // 검색 결과 목록에 추가된 항목들을 제거합니다\n      removeAllChildNods(listEl);\n\n      // 지도에 표시되고 있는 마커를 제거합니다\n      removeMarker();\n      for (let i = 0; i < places.length; i++) {\n        // 마커를 생성하고 지도에 표시합니다\n        let placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\n          marker = addMarker(placePosition, i),\n          itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\n\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n        // LatLngBounds 객체에 좌표를 추가합니다\n        bounds.extend(placePosition);\n\n        // 마커와 검색결과 항목에 mouseover 했을때\n        // 해당 장소에 인포윈도우에 장소명을 표시합니다\n        // mouseout 했을 때는 인포윈도우를 닫습니다\n        (function (marker, title) {\n          kakao.maps.event.addListener(marker, \"mouseover\", function () {\n            displayInfowindow(marker, title);\n          });\n          kakao.maps.event.addListener(marker, \"mouseout\", function () {\n            infowindow.close();\n          });\n          itemEl.onmouseover = function () {\n            displayInfowindow(marker, title);\n          };\n          itemEl.onmouseout = function () {\n            infowindow.close();\n          };\n        })(marker, places[i].place_name);\n        fragment.appendChild(itemEl);\n      }\n\n      // 검색결과 항목들을 검색결과 목록 Element에 추가합니다\n      listEl.appendChild(fragment);\n      menuEl.scrollTop = 0;\n\n      // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n      map.setBounds(bounds);\n    }\n\n    // 검색결과 항목을 Element로 반환하는 함수입니다\n    function getListItem(index, places) {\n      var el = document.createElement(\"li\"),\n        itemStr = '<span class=\"markerbg marker_' + (index + 1) + '\"></span>' + '<div class=\"info\">' + \"   <h5>\" + places.place_name + \"</h5>\";\n      if (places.road_address_name) {\n        itemStr += \"    <span>\" + places.road_address_name + \"</span>\" + '   <span class=\"jibun gray\">' + places.address_name + \"</span>\";\n      } else {\n        itemStr += \"    <span>\" + places.address_name + \"</span>\";\n      }\n      itemStr += '  <span class=\"tel\">' + places.phone + \"</span>\" + \"</div>\";\n      el.innerHTML = itemStr;\n      el.className = \"item\";\n      return el;\n    }\n\n    // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n    function addMarker(position, idx, title) {\n      const imageSrc = \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\",\n        // 마커 이미지 url, 스프라이트 이미지를 씁니다\n        imageSize = new kakao.maps.Size(36, 37),\n        // 마커 이미지의 크기\n        imgOptions = {\n          spriteSize: new kakao.maps.Size(36, 691),\n          // 스프라이트 이미지의 크기\n          spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10),\n          // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n          offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n        },\n        markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n        marker = new kakao.maps.Marker({\n          position: position,\n          // 마커의 위치\n          image: markerImage\n        });\n      marker.setMap(map); // 지도 위에 마커를 표출합니다\n      markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n      return marker;\n    }\n\n    // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n    function removeMarker() {\n      for (var i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n      }\n      markers = [];\n    }\n\n    // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\n    function displayPagination(pagination) {\n      var paginationEl = document.getElementById(\"pagination\"),\n        fragment = document.createDocumentFragment(),\n        i;\n\n      // 기존에 추가된 페이지번호를 삭제합니다\n      while (paginationEl.hasChildNodes()) {\n        paginationEl.removeChild(paginationEl.lastChild);\n      }\n      for (i = 1; i <= pagination.last; i++) {\n        var el = document.createElement(\"a\");\n        el.href = \"#\";\n        el.innerHTML = i;\n        if (i === pagination.current) {\n          el.className = \"on\";\n        } else {\n          el.onclick = function (i) {\n            return function () {\n              pagination.gotoPage(i);\n            };\n          }(i);\n        }\n        fragment.appendChild(el);\n      }\n      paginationEl.appendChild(fragment);\n    }\n\n    // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\n    // 인포윈도우에 장소명을 표시합니다\n    function displayInfowindow(marker, title) {\n      var content = '<div style=\"padding:5px;z-index:1;\">' + title + \"</div>\";\n      infowindow.setContent(content);\n      infowindow.open(map, marker);\n    }\n\n    // 검색결과 목록의 자식 Element를 제거하는 함수입니다\n    function removeAllChildNods(el) {\n      while (el.hasChildNodes()) {\n        el.removeChild(el.lastChild);\n      }\n    }\n  }, []);\n  //컴포넌트가 처음 렌더링 될 때 지도를 띄우기 위해 두 번째 인자를 [](빈배열)로 설정\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      // marginTop: \"60px\",\n      width: \"100%\",\n      height: \"60vh\",\n      backgroundColor: \"#c8c8c8\"\n      // marginBottom: \"100px\",\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n_s(KakaoMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = KakaoMap;\nexport default KakaoMap;\nvar _c;\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["useEffect","kakao","window","KakaoMap","markers","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","map","Map","mapTypeControl","MapTypeControl","addControl","ControlPosition","TOPRIGHT","zoomControl","ZoomControl","RIGHT","ps","services","Places","infowindow","InfoWindow","zIndex","searchPlaces","keyword","value","replace","alert","keywordSearch","placesSearchCB","data","status","pagination","Status","OK","displayPlaces","displayPagination","ZERO_RESULT","ERROR","places","listEl","menuEl","fragment","createDocumentFragment","bounds","LatLngBounds","listStr","removeAllChildNods","removeMarker","i","length","placePosition","y","x","marker","addMarker","itemEl","getListItem","extend","title","event","addListener","displayInfowindow","close","onmouseover","onmouseout","place_name","appendChild","scrollTop","setBounds","index","el","createElement","itemStr","road_address_name","address_name","phone","innerHTML","className","position","idx","imageSrc","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","Marker","image","setMap","push","paginationEl","hasChildNodes","removeChild","lastChild","last","href","current","onclick","gotoPage","content","setContent","open","width","height","backgroundColor"],"sources":["/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/store/KakaoMap.js"],"sourcesContent":["import { useEffect } from \"react\";\nconst { kakao } = window;\n\nfunction KakaoMap() {\n  useEffect(() => {\n    //마커를 담을 배열\n    const markers = [];\n\n    //지도를 담을 영역의 DOM 레퍼런스\n    const mapContainer = document.getElementById(\"map\");\n\n    //지도를 생성할 때 필요한 기본 옵션\n    const mapOption = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667), //지도의 중심 좌표\n      level: 3, //지도의 레벨(확대, 축소 정도)\n    };\n\n    //지도 생성 및 객체 리턴\n    const map = new kakao.maps.Map(mapContainer, mapOption);\n\n    // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성\n    const mapTypeControl = new kakao.maps.MapTypeControl();\n\n    // 지도에 컨트롤을 추가해야 지도위에 표시됨.\n    // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미함.\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\n\n    // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성\n    const zoomControl = new kakao.maps.ZoomControl();\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n\n    // 장소 검색 객체를 생성합니다\n    const ps = new kakao.maps.services.Places();\n\n    // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n    const infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\n\n    // 키워드로 장소를 검색합니다\n    searchPlaces();\n\n    // 키워드 검색을 요청하는 함수입니다\n    function searchPlaces() {\n      var keyword = document.getElementById(\"keyword\").value;\n\n      if (!keyword.replace(/^\\s+|\\s+$/g, \"\")) {\n        alert(\"키워드를 입력해주세요!\");\n        return false;\n      }\n\n      // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\n      ps.keywordSearch(keyword, placesSearchCB);\n    }\n\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        // 정상적으로 검색이 완료됐으면\n        // 검색 목록과 마커를 표출합니다\n        displayPlaces(data);\n\n        // 페이지 번호를 표출합니다\n        displayPagination(pagination);\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n        alert(\"검색 결과가 존재하지 않습니다.\");\n        return;\n      } else if (status === kakao.maps.services.Status.ERROR) {\n        alert(\"검색 결과 중 오류가 발생했습니다.\");\n        return;\n      }\n    }\n\n    // 검색 결과 목록과 마커를 표출하는 함수입니다\n    function displayPlaces(places) {\n      var listEl = document.getElementById(\"placesList\"),\n        menuEl = document.getElementById(\"menu_wrap\"),\n        fragment = document.createDocumentFragment(),\n        bounds = new kakao.maps.LatLngBounds(),\n        listStr = \"\";\n\n      // 검색 결과 목록에 추가된 항목들을 제거합니다\n      removeAllChildNods(listEl);\n\n      // 지도에 표시되고 있는 마커를 제거합니다\n      removeMarker();\n\n      for (let i = 0; i < places.length; i++) {\n        // 마커를 생성하고 지도에 표시합니다\n        let placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\n          marker = addMarker(placePosition, i),\n          itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\n\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n        // LatLngBounds 객체에 좌표를 추가합니다\n        bounds.extend(placePosition);\n\n        // 마커와 검색결과 항목에 mouseover 했을때\n        // 해당 장소에 인포윈도우에 장소명을 표시합니다\n        // mouseout 했을 때는 인포윈도우를 닫습니다\n        (function (marker, title) {\n          kakao.maps.event.addListener(marker, \"mouseover\", function () {\n            displayInfowindow(marker, title);\n          });\n\n          kakao.maps.event.addListener(marker, \"mouseout\", function () {\n            infowindow.close();\n          });\n\n          itemEl.onmouseover = function () {\n            displayInfowindow(marker, title);\n          };\n\n          itemEl.onmouseout = function () {\n            infowindow.close();\n          };\n        })(marker, places[i].place_name);\n\n        fragment.appendChild(itemEl);\n      }\n\n      // 검색결과 항목들을 검색결과 목록 Element에 추가합니다\n      listEl.appendChild(fragment);\n      menuEl.scrollTop = 0;\n\n      // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n      map.setBounds(bounds);\n    }\n\n    // 검색결과 항목을 Element로 반환하는 함수입니다\n    function getListItem(index, places) {\n      var el = document.createElement(\"li\"),\n        itemStr =\n          '<span class=\"markerbg marker_' +\n          (index + 1) +\n          '\"></span>' +\n          '<div class=\"info\">' +\n          \"   <h5>\" +\n          places.place_name +\n          \"</h5>\";\n\n      if (places.road_address_name) {\n        itemStr +=\n          \"    <span>\" +\n          places.road_address_name +\n          \"</span>\" +\n          '   <span class=\"jibun gray\">' +\n          places.address_name +\n          \"</span>\";\n      } else {\n        itemStr += \"    <span>\" + places.address_name + \"</span>\";\n      }\n\n      itemStr += '  <span class=\"tel\">' + places.phone + \"</span>\" + \"</div>\";\n\n      el.innerHTML = itemStr;\n      el.className = \"item\";\n\n      return el;\n    }\n\n    // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n    function addMarker(position, idx, title) {\n      const imageSrc =\n          \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\n        imageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기\n        imgOptions = {\n          spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\n          spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n          offset: new kakao.maps.Point(13, 37), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n        },\n        markerImage = new kakao.maps.MarkerImage(\n          imageSrc,\n          imageSize,\n          imgOptions\n        ),\n        marker = new kakao.maps.Marker({\n          position: position, // 마커의 위치\n          image: markerImage,\n        });\n\n      marker.setMap(map); // 지도 위에 마커를 표출합니다\n      markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n      return marker;\n    }\n\n    // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n    function removeMarker() {\n      for (var i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n      }\n      markers = [];\n    }\n\n    // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\n    function displayPagination(pagination) {\n      var paginationEl = document.getElementById(\"pagination\"),\n        fragment = document.createDocumentFragment(),\n        i;\n\n      // 기존에 추가된 페이지번호를 삭제합니다\n      while (paginationEl.hasChildNodes()) {\n        paginationEl.removeChild(paginationEl.lastChild);\n      }\n\n      for (i = 1; i <= pagination.last; i++) {\n        var el = document.createElement(\"a\");\n        el.href = \"#\";\n        el.innerHTML = i;\n\n        if (i === pagination.current) {\n          el.className = \"on\";\n        } else {\n          el.onclick = (function (i) {\n            return function () {\n              pagination.gotoPage(i);\n            };\n          })(i);\n        }\n\n        fragment.appendChild(el);\n      }\n      paginationEl.appendChild(fragment);\n    }\n\n    // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\n    // 인포윈도우에 장소명을 표시합니다\n    function displayInfowindow(marker, title) {\n      var content = '<div style=\"padding:5px;z-index:1;\">' + title + \"</div>\";\n\n      infowindow.setContent(content);\n      infowindow.open(map, marker);\n    }\n\n    // 검색결과 목록의 자식 Element를 제거하는 함수입니다\n    function removeAllChildNods(el) {\n      while (el.hasChildNodes()) {\n        el.removeChild(el.lastChild);\n      }\n    }\n  }, []);\n  //컴포넌트가 처음 렌더링 될 때 지도를 띄우기 위해 두 번째 인자를 [](빈배열)로 설정\n\n  return (\n    <div\n      id=\"map\"\n      style={{\n        // marginTop: \"60px\",\n        width: \"100%\",\n        height: \"60vh\",\n        backgroundColor: \"#c8c8c8\",\n        // marginBottom: \"100px\",\n      }}\n    ></div>\n  );\n}\nexport default KakaoMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}