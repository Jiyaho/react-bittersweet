{"ast":null,"code":"var _jsxFileName = \"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/NoticeWrite.js\",\n  _s = $RefreshSig$();\nimport FormOfNoticeWrite from \"components/FormOfNoticeWrite\";\nimport Nav from \"components/Nav\";\nimport Footer from \"components/Footer\";\nimport styles from \"css/App.module.css\";\nimport { useState } from \"react\";\nimport { userPosting } from \"_actions/user_action\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NoticeWrite() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [writer, setWriter] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const onWriterHandler = e => {\n    setWriter(e.target.value);\n  };\n  const onTilteHandler = e => {\n    setTitle(e.target.value);\n  };\n  const onContentHandler = e => {\n    setContent(e.target.value);\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    let body = {\n      writer: writer,\n      title: title,\n      content: content\n    };\n    dispatch(userPosting(body)).then(response => {\n      if (response.payload.postSuccess) {\n        alert(\"등록 완료!\");\n        navigate(\"/notice\");\n      } else {\n        alert(\"Error\");\n      }\n    });\n  };\n  const onClickCancle = () => {\n    if (window.confirm(\"등록을 취소 하시겠습니까?\") == true) {\n      navigate(\"/notice\");\n    } else {\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.page_title,\n      children: \"WRITE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormOfNoticeWrite, {\n      formOnSubmit: onSubmit,\n      writerPlaceholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n      writerOnchange: onWriterHandler,\n      writerValue: writer,\n      titlePlaceholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n      titleOnchange: onTilteHandler,\n      titleValue: title,\n      contentPlaceholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n      contentOnchange: onContentHandler,\n      contentValue: content,\n      buttonOnSubmit: onSubmit,\n      cancleBtnOnClick: onClickCancle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(NoticeWrite, \"osBJweEZNrVXd8/zqOazlklM5Yw=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = NoticeWrite;\nexport default NoticeWrite;\nvar _c;\n$RefreshReg$(_c, \"NoticeWrite\");","map":{"version":3,"names":["FormOfNoticeWrite","Nav","Footer","styles","useState","userPosting","useNavigate","useDispatch","NoticeWrite","navigate","dispatch","writer","setWriter","title","setTitle","content","setContent","onWriterHandler","e","target","value","onTilteHandler","onContentHandler","onSubmit","preventDefault","body","then","response","payload","postSuccess","alert","onClickCancle","window","confirm","page_title"],"sources":["/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/routes/NoticeWrite.js"],"sourcesContent":["import FormOfNoticeWrite from \"components/FormOfNoticeWrite\";\nimport Nav from \"components/Nav\";\nimport Footer from \"components/Footer\";\nimport styles from \"css/App.module.css\";\nimport { useState } from \"react\";\nimport { userPosting } from \"_actions/user_action\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nfunction NoticeWrite() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [writer, setWriter] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const onWriterHandler = (e) => {\n    setWriter(e.target.value);\n  };\n  const onTilteHandler = (e) => {\n    setTitle(e.target.value);\n  };\n  const onContentHandler = (e) => {\n    setContent(e.target.value);\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let body = {\n      writer: writer,\n      title: title,\n      content: content,\n    };\n    dispatch(userPosting(body)).then((response) => {\n      if (response.payload.postSuccess) {\n        alert(\"등록 완료!\");\n        navigate(\"/notice\");\n      } else {\n        alert(\"Error\");\n      }\n    });\n  };\n\n  const onClickCancle = () => {\n    if (window.confirm(\"등록을 취소 하시겠습니까?\") == true) {\n      navigate(\"/notice\");\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <div>\n      <Nav />\n      <h2 className={styles.page_title}>WRITE</h2>\n      <FormOfNoticeWrite\n        formOnSubmit={onSubmit}\n        writerPlaceholder=\"이름을 입력해 주세요\"\n        writerOnchange={onWriterHandler}\n        writerValue={writer}\n        titlePlaceholder=\"제목을 입력해 주세요.\"\n        titleOnchange={onTilteHandler}\n        titleValue={title}\n        contentPlaceholder=\"내용을 입력해 주세요.\"\n        contentOnchange={onContentHandler}\n        contentValue={content}\n        buttonOnSubmit={onSubmit}\n        cancleBtnOnClick={onClickCancle}\n      />\n      <Footer />\n    </div>\n  );\n}\nexport default NoticeWrite;\n"],"mappings":";;AAAA,OAAOA,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,GAAG,MAAM,gBAAgB;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AAAC;AAE1C,SAASC,WAAW,GAAG;EAAA;EACrB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAMI,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,eAAe,GAAIC,CAAC,IAAK;IAC7BN,SAAS,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EACD,MAAMC,cAAc,GAAIH,CAAC,IAAK;IAC5BJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EACD,MAAME,gBAAgB,GAAIJ,CAAC,IAAK;IAC9BF,UAAU,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EACD,MAAMG,QAAQ,GAAIL,CAAC,IAAK;IACtBA,CAAC,CAACM,cAAc,EAAE;IAClB,IAAIC,IAAI,GAAG;MACTd,MAAM,EAAEA,MAAM;MACdE,KAAK,EAAEA,KAAK;MACZE,OAAO,EAAEA;IACX,CAAC;IACDL,QAAQ,CAACL,WAAW,CAACoB,IAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC7C,IAAIA,QAAQ,CAACC,OAAO,CAACC,WAAW,EAAE;QAChCC,KAAK,CAAC,QAAQ,CAAC;QACfrB,QAAQ,CAAC,SAAS,CAAC;MACrB,CAAC,MAAM;QACLqB,KAAK,CAAC,OAAO,CAAC;MAChB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,aAAa,GAAG,MAAM;IAC1B,IAAIC,MAAM,CAACC,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI,EAAE;MAC5CxB,QAAQ,CAAC,SAAS,CAAC;IACrB,CAAC,MAAM;MACL;IACF;EACF,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eACP;MAAI,SAAS,EAAEN,MAAM,CAAC+B,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAW,eAC5C,QAAC,iBAAiB;MAChB,YAAY,EAAEX,QAAS;MACvB,iBAAiB,EAAC,0DAAa;MAC/B,cAAc,EAAEN,eAAgB;MAChC,WAAW,EAAEN,MAAO;MACpB,gBAAgB,EAAC,2DAAc;MAC/B,aAAa,EAAEU,cAAe;MAC9B,UAAU,EAAER,KAAM;MAClB,kBAAkB,EAAC,2DAAc;MACjC,eAAe,EAAES,gBAAiB;MAClC,YAAY,EAAEP,OAAQ;MACtB,cAAc,EAAEQ,QAAS;MACzB,gBAAgB,EAAEQ;IAAc;MAAA;MAAA;MAAA;IAAA,QAChC,eACF,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEV;AAAC,GA9DQvB,WAAW;EAAA,QACDF,WAAW,EACXC,WAAW;AAAA;AAAA,KAFrBC,WAAW;AA+DpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}