{"ast":null,"code":"var _jsxFileName = \"/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/store/KakaoMap.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nfunction KakaoMap() {\n  _s();\n  useEffect(() => {\n    //마커를 담을 배열\n    const markers = [];\n\n    //지도를 담을 영역의 DOM 레퍼런스\n    const mapContainer = document.getElementById(\"map\");\n\n    //지도를 생성할 때 필요한 기본 옵션\n    const mapOption = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      //지도의 중심 좌표\n      level: 3 //지도의 레벨(확대, 축소 정도)\n    };\n\n    //지도 생성 및 객체 리턴\n    const map = new kakao.maps.Map(mapContainer, mapOption);\n\n    // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성\n    const mapTypeControl = new kakao.maps.MapTypeControl();\n\n    // 지도에 컨트롤을 추가해야 지도위에 표시됨.\n    // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미함.\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\n\n    // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성\n    const zoomControl = new kakao.maps.ZoomControl();\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n\n    // 장소 검색 객체를 생성합니다\n    const ps = new kakao.maps.services.Places();\n\n    // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n    const infowindow = new kakao.maps.InfoWindow({\n      zIndex: 1\n    });\n\n    // 키워드로 장소를 검색합니다\n    searchPlaces();\n\n    // 키워드 검색을 요청하는 함수입니다\n    function searchPlaces() {\n      var keyword = document.getElementById(\"keyword\").value;\n      if (!keyword.replace(/^\\s+|\\s+$/g, \"\")) {\n        alert(\"키워드를 입력해주세요!\");\n        return false;\n      }\n\n      // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\n      ps.keywordSearch(keyword, placesSearchCB);\n    }\n\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        // 정상적으로 검색이 완료됐으면\n        // 검색 목록과 마커를 표출합니다\n        displayPlaces(data);\n\n        // 페이지 번호를 표출합니다\n        displayPagination(pagination);\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n        alert(\"검색 결과가 존재하지 않습니다.\");\n        return;\n      } else if (status === kakao.maps.services.Status.ERROR) {\n        alert(\"검색 결과 중 오류가 발생했습니다.\");\n        return;\n      }\n    }\n  }, []);\n  //컴포넌트가 처음 렌더링 될 때 지도를 띄우기 위해 두 번째 인자를 [](빈배열)로 설정\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      // marginTop: \"60px\",\n      width: \"100%\",\n      height: \"60vh\",\n      backgroundColor: \"#c8c8c8\"\n      // marginBottom: \"100px\",\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(KakaoMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = KakaoMap;\nexport default KakaoMap;\nvar _c;\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["useEffect","kakao","window","KakaoMap","markers","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","map","Map","mapTypeControl","MapTypeControl","addControl","ControlPosition","TOPRIGHT","zoomControl","ZoomControl","RIGHT","ps","services","Places","infowindow","InfoWindow","zIndex","searchPlaces","keyword","value","replace","alert","keywordSearch","placesSearchCB","data","status","pagination","Status","OK","displayPlaces","displayPagination","ZERO_RESULT","ERROR","width","height","backgroundColor"],"sources":["/Users/jiho/Desktop/dev/project/react-bittersweet/client/src/components/store/KakaoMap.js"],"sourcesContent":["import { useEffect } from \"react\";\nconst { kakao } = window;\n\nfunction KakaoMap() {\n  useEffect(() => {\n    //마커를 담을 배열\n    const markers = [];\n\n    //지도를 담을 영역의 DOM 레퍼런스\n    const mapContainer = document.getElementById(\"map\");\n\n    //지도를 생성할 때 필요한 기본 옵션\n    const mapOption = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667), //지도의 중심 좌표\n      level: 3, //지도의 레벨(확대, 축소 정도)\n    };\n\n    //지도 생성 및 객체 리턴\n    const map = new kakao.maps.Map(mapContainer, mapOption);\n\n    // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성\n    const mapTypeControl = new kakao.maps.MapTypeControl();\n\n    // 지도에 컨트롤을 추가해야 지도위에 표시됨.\n    // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미함.\n    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\n\n    // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성\n    const zoomControl = new kakao.maps.ZoomControl();\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n\n    // 장소 검색 객체를 생성합니다\n    const ps = new kakao.maps.services.Places();\n\n    // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n    const infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\n\n    // 키워드로 장소를 검색합니다\n    searchPlaces();\n\n    // 키워드 검색을 요청하는 함수입니다\n    function searchPlaces() {\n      var keyword = document.getElementById(\"keyword\").value;\n\n      if (!keyword.replace(/^\\s+|\\s+$/g, \"\")) {\n        alert(\"키워드를 입력해주세요!\");\n        return false;\n      }\n\n      // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\n      ps.keywordSearch(keyword, placesSearchCB);\n    }\n\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        // 정상적으로 검색이 완료됐으면\n        // 검색 목록과 마커를 표출합니다\n        displayPlaces(data);\n\n        // 페이지 번호를 표출합니다\n        displayPagination(pagination);\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n        alert(\"검색 결과가 존재하지 않습니다.\");\n        return;\n      } else if (status === kakao.maps.services.Status.ERROR) {\n        alert(\"검색 결과 중 오류가 발생했습니다.\");\n        return;\n      }\n    }\n  }, []);\n  //컴포넌트가 처음 렌더링 될 때 지도를 띄우기 위해 두 번째 인자를 [](빈배열)로 설정\n\n  return (\n    <div\n      id=\"map\"\n      style={{\n        // marginTop: \"60px\",\n        width: \"100%\",\n        height: \"60vh\",\n        backgroundColor: \"#c8c8c8\",\n        // marginBottom: \"100px\",\n      }}\n    ></div>\n  );\n}\nexport default KakaoMap;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC;AAClC,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;AAExB,SAASC,QAAQ,GAAG;EAAA;EAClBH,SAAS,CAAC,MAAM;IACd;IACA,MAAMI,OAAO,GAAG,EAAE;;IAElB;IACA,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;;IAEnD;IACA,MAAMC,SAAS,GAAG;MAChBC,MAAM,EAAE,IAAIR,KAAK,CAACS,IAAI,CAACC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC;MAAE;MACtDC,KAAK,EAAE,CAAC,CAAE;IACZ,CAAC;;IAED;IACA,MAAMC,GAAG,GAAG,IAAIZ,KAAK,CAACS,IAAI,CAACI,GAAG,CAACT,YAAY,EAAEG,SAAS,CAAC;;IAEvD;IACA,MAAMO,cAAc,GAAG,IAAId,KAAK,CAACS,IAAI,CAACM,cAAc,EAAE;;IAEtD;IACA;IACAH,GAAG,CAACI,UAAU,CAACF,cAAc,EAAEd,KAAK,CAACS,IAAI,CAACQ,eAAe,CAACC,QAAQ,CAAC;;IAEnE;IACA,MAAMC,WAAW,GAAG,IAAInB,KAAK,CAACS,IAAI,CAACW,WAAW,EAAE;IAChDR,GAAG,CAACI,UAAU,CAACG,WAAW,EAAEnB,KAAK,CAACS,IAAI,CAACQ,eAAe,CAACI,KAAK,CAAC;;IAE7D;IACA,MAAMC,EAAE,GAAG,IAAItB,KAAK,CAACS,IAAI,CAACc,QAAQ,CAACC,MAAM,EAAE;;IAE3C;IACA,MAAMC,UAAU,GAAG,IAAIzB,KAAK,CAACS,IAAI,CAACiB,UAAU,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC,CAAC;;IAE3D;IACAC,YAAY,EAAE;;IAEd;IACA,SAASA,YAAY,GAAG;MACtB,IAAIC,OAAO,GAAGxB,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACwB,KAAK;MAEtD,IAAI,CAACD,OAAO,CAACE,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;QACtCC,KAAK,CAAC,cAAc,CAAC;QACrB,OAAO,KAAK;MACd;;MAEA;MACAV,EAAE,CAACW,aAAa,CAACJ,OAAO,EAAEK,cAAc,CAAC;IAC3C;;IAEA;IACA,SAASA,cAAc,CAACC,IAAI,EAAEC,MAAM,EAAEC,UAAU,EAAE;MAChD,IAAID,MAAM,KAAKpC,KAAK,CAACS,IAAI,CAACc,QAAQ,CAACe,MAAM,CAACC,EAAE,EAAE;QAC5C;QACA;QACAC,aAAa,CAACL,IAAI,CAAC;;QAEnB;QACAM,iBAAiB,CAACJ,UAAU,CAAC;MAC/B,CAAC,MAAM,IAAID,MAAM,KAAKpC,KAAK,CAACS,IAAI,CAACc,QAAQ,CAACe,MAAM,CAACI,WAAW,EAAE;QAC5DV,KAAK,CAAC,mBAAmB,CAAC;QAC1B;MACF,CAAC,MAAM,IAAII,MAAM,KAAKpC,KAAK,CAACS,IAAI,CAACc,QAAQ,CAACe,MAAM,CAACK,KAAK,EAAE;QACtDX,KAAK,CAAC,qBAAqB,CAAC;QAC5B;MACF;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EACN;;EAEA,oBACE;IACE,EAAE,EAAC,KAAK;IACR,KAAK,EAAE;MACL;MACAY,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,eAAe,EAAE;MACjB;IACF;EAAE;IAAA;IAAA;IAAA;EAAA,QACG;AAEX;AAAC,GAlFQ5C,QAAQ;AAAA,KAARA,QAAQ;AAmFjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}